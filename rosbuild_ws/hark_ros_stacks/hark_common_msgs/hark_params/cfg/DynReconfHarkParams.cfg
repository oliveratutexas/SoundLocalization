#! /usr/bin/env python

PACKAGE='hark_params'
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator import *
gen = ParameterGenerator()

enum = gen.enum([ 
gen.const("DEG", int_t, 0, "DEG"),
gen.const("TFINDEX", int_t, 1, "TFINDEX") ],
 "An enum to set the compare mode.")

#       Name                                  Type      Reconfiguration level   Description                              Default    Min   Max
gen.add("HarkParamsDynReconfEnable",          bool_t,   0,                      "Enable dynamic reconf mode",            False)
gen.add("LocalizeMUSIC_num_source",           int_t,    0,                      "LocalizeMUSIC : NUM_SOURCE",            2,         1,     7)
gen.add("LocalizeMUSIC_min_deg",              int_t,    0,                      "LocalizeMUSIC : MIN_DEG",              -180,      -180,   180)
gen.add("LocalizeMUSIC_max_deg",              int_t,    0,                      "LocalizeMUSIC : MAX_DEG",               180,      -180,   180)
gen.add("LocalizeMUSIC_lower_bound_frequency",int_t,    0,                      "LocalizeMUSIC : LOWER_BOUND_FREQUENCY", 500,       0,     8000)
gen.add("LocalizeMUSIC_upper_bound_frequency",int_t,    0,                      "LocalizeMUSIC : UPPER_BOUND_FREQUENCY", 2800,      0,     8000)
gen.add("SourceTracker_thresh",               double_t, 0,                      "SourceTracker : THRESH",                23.0,      0.0,   100.0)
gen.add("SourceTracker_pause_length",         double_t, 0,                      "SourceTracker : PAUSE_LENGTH",          800.0,     0.0,   5000.0)
gen.add("SourceTracker_min_src_interval",     double_t, 0,                      "SourceTracker : MIN_SRC_INTERVAL",      20.0,      0.0,   180.0)
gen.add("SourceTracker_min_tfindex_interval", double_t, 0,                      "SourceTracker : MIN_TFINDEX_INTERVAL",  6.0,       0.0,   36.0)
gen.add("SourceTracker_compare_mode",         int_t,    0,                      "SourceTracker : COMPARE_MODE",          0,         0,     1, edit_method = enum)
gen.add("HRLE_lx",                            double_t, 0,                      "HRLE : LX",                             0.85,      0.0,   1.0)
gen.add("HRLE_time_constant",                 double_t, 0,                      "HRLE : TIME_CONSTANT",                  16000.0,   160.0, 960000.0)

exit(gen.generate(PACKAGE, "NodeDynReconfHarkParams", "DynReconfHarkParams"))
